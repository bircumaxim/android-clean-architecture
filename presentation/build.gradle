apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

kapt {
    generateStubs = true
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId "maximbircu.ml"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        archivesBaseName = rootProject.ext.archivesBaseName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'environment'

    productFlavors {
        // environment flavors

        Live {
            dimension 'environment'
        }

        QA {
            dimension 'environment'
        }
    }
}

dependencies {
    compile project(path: ':data')
    compile project(path: ':domain')

    def android = rootProject.ext.androidDependences
    def libraries = rootProject.ext.librariesDependeces
    def test = rootProject.ext.testingDependeces

    //android
    implementation android.kotlin
    implementation android.kotlinReflect
    implementation android.appCompat
    implementation android.constraintLayout
    implementation android.picasso
    implementation android.googlePlayServices
    implementation android.firebaseCore
    implementation android.firebaseCrash

    //libraries
    implementation libraries.rxJava
    implementation libraries.rxAndroid
    implementation libraries.dagger
    kapt libraries.daggerCompiler

    //test
    testImplementation test.junit
    androidTestImplementation test.espressoCore
    androidTestImplementation test.espressoRunner

    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
}


apply plugin: 'com.google.gms.google-services'